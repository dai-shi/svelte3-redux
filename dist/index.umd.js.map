{"version":3,"file":"index.umd.js","sources":["../src/bind.ts"],"sourcesContent":["import { Action, Store } from 'redux';\nimport { readable } from 'svelte/store';\n\n/**\n * Take Redux store and return a global state for Svelte.\n * @example\n * import { createStore } from 'redux';\n * import { bind } from 'svelte3-redux';\n * const store = createStore(reducer);\n * export default bind(store);\n */\nexport const bind = <S, A extends Action>(store: Store<S, A>) => {\n  const state = readable(store.getState(), (set) => {\n    const unsubscribe = store.subscribe(() => {\n      set(store.getState());\n    });\n    return unsubscribe;\n  });\n  return {\n    subscribe: state.subscribe,\n    dispatch: store.dispatch,\n  };\n};\n"],"names":["store","subscribe","readable","getState","set","dispatch"],"mappings":"qPAWoB,SAAsBA,GAOxC,MAAO,CACLC,UAPYC,WAASF,EAAMG,YAAY,SAACC,GAIxC,OAHoBJ,EAAMC,WAAU,WAClCG,EAAIJ,EAAMG,kBAKKF,UACjBI,SAAUL,EAAMK"}